{"version":3,"file":"static/js/648.dbbd35cd.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.js","components/ContactsForm/ContactForm.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","redux/contacts/contactsSelectors.js","../node_modules/react-bootstrap/esm/createUtilityClasses.js","../node_modules/react-bootstrap/esm/Stack.js","components/ContactsItem/ContactsItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"sourcesContent":["import { Oval } from 'react-loader-spinner';\n\nconst Spinner = () => {\n  return (\n    <Oval\n      ariaLabel=\"loading-indicator\"\n      height={30}\n      width={30}\n      strokeWidth={5}\n      strokeWidthSecondary={1}\n      color=\"blue\"\n      secondaryColor=\"white\"\n    />\n  );\n};\n\nexport default Spinner;\n","import { Form, Button, Card } from 'react-bootstrap';\nimport { useState } from 'react';\n\nimport {\n  useCreateContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactSlice';\nimport Spinner from 'components/Spinner/Spinner';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const onChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value.toLowerCase());\n        break;\n\n      case 'number':\n        setNumber(value.toLowerCase());\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    contacts.some(contact => contact.name === newContact.name)\n      ? window.alert('The contact added in the list')\n      : createContact(newContact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <>\n    <h1 className=\"header text-center p-3 mt-2\">Phonebook</h1>\n      <Card className=\"justify-content-center p-3 mx-auto mt-5\" style={{ width: '25rem' }}>\n        <Form className=\"mb-3 p-2\" onSubmit={onHandleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label> Name</Form.Label>\n            <Form.Control\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={onChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Number</Form.Label>\n            <Form.Control\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              onChange={onChange}\n              required\n            />\n          </Form.Group>\n\n          {isLoading ? (\n            <Spinner />\n          ) : (\n            <Button size=\"lg\" variant=\"outline-info\" type=\"submit\">\n              Add contact\n            </Button>\n          )}\n        </Form>\n      </Card>\n    </>\n  );\n}\n","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"active\", \"eventKey\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null); // @ts-ignore\n\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n\n    if (key == null) {\n      return;\n    }\n\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: Component = Button,\n    active,\n    eventKey\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options)); // @ts-ignore\n\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    onSelect,\n    activeKey,\n    role,\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  const listNode = useRef(null);\n\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n\n    if (!tabContext) {\n      return;\n    }\n\n    let nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","export const getFilter = state => state.filter;\n\nexport const getContsctsFilter = (filter, contacts) => {\n  const normalizeFilter = filter.toLowerCase();\n  return contacts?.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizeFilter) ||\n      number.includes(normalizeFilter)\n  );\n};\n","import PropTypes from 'prop-types';\nimport { DEFAULT_BREAKPOINTS } from './ThemeProvider';\nexport function responsivePropType(propType) {\n  return PropTypes.oneOfType([propType, PropTypes.shape({\n    xs: propType,\n    sm: propType,\n    md: propType,\n    lg: propType,\n    xl: propType,\n    xxl: propType\n  })]);\n}\nexport default function createUtilityClassName(utilityValues, breakpoints = DEFAULT_BREAKPOINTS) {\n  const classes = [];\n  Object.entries(utilityValues).forEach(([utilName, utilValue]) => {\n    if (utilValue != null) {\n      if (typeof utilValue === 'object') {\n        breakpoints.forEach(brkPoint => {\n          const bpValue = utilValue[brkPoint];\n\n          if (bpValue != null) {\n            const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n            classes.push(`${utilName}${infix}-${bpValue}`);\n          }\n        });\n      } else {\n        classes.push(`${utilName}-${utilValue}`);\n      }\n    }\n  });\n  return classes;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport createUtilityClassName, { responsivePropType } from './createUtilityClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Stack = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  direction,\n  gap,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, direction === 'horizontal' ? 'hstack' : 'vstack');\n  const breakpoints = useBootstrapBreakpoints();\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, ...createUtilityClassName({\n      gap,\n      breakpoints\n    }))\n  });\n});\nStack.displayName = 'Stack';\nexport default Stack;","import PropTypes from 'prop-types';\nimport { ListGroup, Button, Stack } from 'react-bootstrap';\n\nimport { useDeleteContactMutation } from 'redux/contacts/contactSlice';\n\nconst ContactItem = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n  return (\n    <ListGroup.Item>\n      <Stack direction=\"horizontal\" gap={2}>\n        <p>\n          {name} : {number}\n        </p>\n        <Button\n          variant=\"outline-info\"\n          type=\"button\"\n          className=\"ms-auto\"\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </Button>\n      </Stack>\n    </ListGroup.Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport { ListGroup } from 'react-bootstrap';\n\nimport Spinner from 'components/Spinner/Spinner';\nimport { getFilter, getContsctsFilter } from 'redux/contacts/contactsSelectors';\nimport { useFetchContactsQuery } from 'redux/contacts/contactSlice';\nimport ContactItem from '../ContactsItem/ContactsItem';\n\nconst ContactList = () => {\n  const { data, isFetching } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilter);\n  const contacts = getContsctsFilter(filter, data);\n\n  return (\n    <>\n      <ListGroup className=\"justify-content-center p-3 mx-auto mt-5\" style={{ width: '25rem' }}>\n        {isFetching && <Spinner />}\n        {contacts &&\n          contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ListGroup>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { Form } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { changeFilter } from 'redux/contacts/actions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  console.log();\n  return (\n    <>\n    <h2 className=\"header text-center p-3 mt-2\">Contacts</h2>\n      <Form className=\"justify-content-center p-3 mx-auto mt-5\" style={{ width: '25rem' }}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Find contacts by name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Search...\"\n            onChange={event =>\n              dispatch(changeFilter(event.target.value.trim()))\n            }\n          />\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nexport default Filter;\n","// import { Container } from 'react-bootstrap';\nimport ContactForm from 'components/ContactsForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsView = () => {\n  return (\n    <>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"names":["ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","ContactForm","useState","name","setName","number","setNumber","useCreateContactMutation","createContact","isLoading","contacts","useFetchContactsQuery","data","onChange","event","target","value","toLowerCase","reset","className","Card","style","Form","onSubmit","preventDefault","newContact","some","contact","window","alert","controlId","type","pattern","title","required","Spinner","Button","size","variant","NavContext","React","displayName","_excluded","useNavItem","key","onClick","active","id","role","disabled","parentOnSelect","useContext","SelectableContext","navContext","tabContext","TabContext","isActive","props","contextControllerId","getControllerId","contextControlledId","getControlledId","dataAttr","activeKey","unmountOnExit","mountOnEnter","tabIndex","useEventCallback","e","isPropagationStopped","NavItem","_ref","ref","as","Component","eventKey","options","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","makeEventKey","href","meta","_jsx","noop","EVENT_KEY_ATTR","Nav","onSelect","onKeyDown","forceUpdate","useReducer","state","needsRefocusRef","useRef","listNode","getNextActiveTab","offset","currentListNode","current","items","qsa","activeChild","querySelector","document","activeElement","index","nextIndex","handleSelect","useEffect","focus","mergedRef","useMergedRefs","children","nextActiveChild","dataset","dataProp","Item","ListGroupItem","bsPrefix","action","useBootstrapPrefix","navItemProps","handleClick","stopPropagation","undefined","classNames","ListGroup","horizontalVariant","useUncontrolled","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","getFilter","filter","createUtilityClassName","utilityValues","breakpoints","DEFAULT_BREAKPOINTS","classes","entries","forEach","utilName","utilValue","brkPoint","bpValue","infix","push","Stack","direction","gap","useBootstrapBreakpoints","useDeleteContactMutation","deleteContact","isFetching","normalizeFilter","includes","getContsctsFilter","useSelector","map","dispatch","useDispatch","console","log","placeholder","changeFilter","trim"],"sourceRoot":""}